/*
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Config file for defining DSL2 per module options and publishing paths
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Available keys to override module options:
        ext.args   = Additional arguments appended to command in module.
        ext.args2  = Second set of arguments appended to command in module (multi-tool modules).
        ext.args3  = Third set of arguments appended to command in module (multi-tool modules).
        ext.prefix = File name prefix for output files.
----------------------------------------------------------------------------------------
*/

process {


withName: 'TABIX_BGZIP' {

    
    publishDir = [
        path: { "${params.outdir}/vardictjava" },
        mode: params.publish_dir_mode,
        saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
    ]

}

withName: GATK4_MUTECT2 {
ext.prefix = { "${meta.id}.mutect2" }
    publishDir = [
        path: { "${params.outdir}/mutect2" },
        mode: params.publish_dir_mode,
        saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
    ]
}




withName: '.*:PROCESSING_VARSCAN:TABIX_TABIX_2' {
    ext.args='-b2 -e2'
    
}



withName: '.*:PROCESSING_VARSCAN:TABIX_BGZIP' {
    ext.args='-c'
    
}



withName: BCFTOOLS_QUERY {
    ext.args='-f "%CHROM %POS [%AD] [%DP]\n"'
    

}

withName: BCFTOOLS_ANNOTATE {
    ext.args='-c CHROM,POS,FORMAT/AF -Oz'
    ext.prefix = { "${meta.id}.v2" }
    publishDir = [
        path: { "${params.outdir}/varscan" },
        mode: params.publish_dir_mode,
        saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
    ]
}




withName: BCFTOOLS_REHEADER {
    ext.prefix = { "${meta.id}" }
    publishDir = [
        path: { "${params.outdir}/join" },
        mode: params.publish_dir_mode,
        saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
    ]
}


}


withName: CUSTOM_DUMPSOFTWAREVERSIONS {
        publishDir = [
            path: { "${params.outdir}/pipeline_info" },
            mode: params.publish_dir_mode,
            pattern: '*_versions.yml'
        ]
    }
